// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UaiLink.Models;

namespace UaiLink.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220604142135_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("UaiLink.Models.AnexoDto", b =>
                {
                    b.Property<int>("AnexoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CampoAnexo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeAnexo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjetoID")
                        .HasColumnType("int");

                    b.HasKey("AnexoID");

                    b.HasIndex("ProjetoID")
                        .IsUnique();

                    b.ToTable("Anexos");
                });

            modelBuilder.Entity("UaiLink.Models.ComentarioDto", b =>
                {
                    b.Property<int>("ComentarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Conteudo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjetoID")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioDtoUsuarioID")
                        .HasColumnType("int");

                    b.HasKey("ComentarioID");

                    b.HasIndex("ProjetoID");

                    b.HasIndex("UsuarioDtoUsuarioID");

                    b.ToTable("Comentarios");
                });

            modelBuilder.Entity("UaiLink.Models.ProjetoDto", b =>
                {
                    b.Property<int>("ProjetoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Categoria")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("ProjetoID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Projetos");
                });

            modelBuilder.Entity("UaiLink.Models.TagDto", b =>
                {
                    b.Property<int>("TagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsuarioDtoUsuarioID")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("TagId");

                    b.HasIndex("UsuarioDtoUsuarioID");

                    b.ToTable("tags");
                });

            modelBuilder.Entity("UaiLink.Models.UsuarioDto", b =>
                {
                    b.Property<int>("UsuarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Curso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataInicioCurso")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EspecificacaoVaga")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeTags")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PrevisaoFimCurso")
                        .HasColumnType("datetime2");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoUsuario")
                        .HasColumnType("int");

                    b.Property<string>("UrlFoto")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UsuarioID");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("UaiLink.Models.AnexoDto", b =>
                {
                    b.HasOne("UaiLink.Models.ProjetoDto", "Projeto")
                        .WithOne("Anexo")
                        .HasForeignKey("UaiLink.Models.AnexoDto", "ProjetoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Projeto");
                });

            modelBuilder.Entity("UaiLink.Models.ComentarioDto", b =>
                {
                    b.HasOne("UaiLink.Models.ProjetoDto", "Projeto")
                        .WithMany("Comentarios")
                        .HasForeignKey("ProjetoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UaiLink.Models.UsuarioDto", null)
                        .WithMany("Comentarios")
                        .HasForeignKey("UsuarioDtoUsuarioID");

                    b.Navigation("Projeto");
                });

            modelBuilder.Entity("UaiLink.Models.ProjetoDto", b =>
                {
                    b.HasOne("UaiLink.Models.UsuarioDto", "Usuario")
                        .WithMany("Projetos")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("UaiLink.Models.TagDto", b =>
                {
                    b.HasOne("UaiLink.Models.UsuarioDto", null)
                        .WithMany("Tag")
                        .HasForeignKey("UsuarioDtoUsuarioID");
                });

            modelBuilder.Entity("UaiLink.Models.ProjetoDto", b =>
                {
                    b.Navigation("Anexo");

                    b.Navigation("Comentarios");
                });

            modelBuilder.Entity("UaiLink.Models.UsuarioDto", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("Projetos");

                    b.Navigation("Tag");
                });
#pragma warning restore 612, 618
        }
    }
}
